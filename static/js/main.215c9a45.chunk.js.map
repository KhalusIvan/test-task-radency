{"version":3,"sources":["compenents/table/Table.js","compenents/dropzone/Dropzone.js","compenents/CSVReader.js","App.js","index.js"],"names":["Table","props","useState","isValid","setIsValid","data","validPhone","phone","length","slice","printPhone","validExperience","experience","age","isNaN","validLicenseStates","state","splittedState","split","isGood","forEach","el","test","validExpirationDate","date","month","day","year","1","2","3","4","5","6","7","8","9","10","11","12","Date","findDuplicate","email","index","middleIndex","counter","i","toLowerCase","CreateRow","map","className","income","Number","toFixed","hasChildren","includes","toUpperCase","join","number","useEffect","preload","Dropzone","onLoadReader","evt","a","bstr","target","result","allInfo","filter","trim","table","splited","j","push","objectsArray","newObj","setLoaded","onDrop","useCallback","acceptedFiles","file","type","reader","FileReader","onload","readAsBinaryString","useDropzone","getRootProps","getInputProps","CSVReader","loaded","Array","isArray","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.215c9a45.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport \"./table.css\"\r\n\r\nexport const Table = (props) => {\r\n    const [isValid, setIsValid] = useState(true)\r\n    const {data} = props\r\n\r\n    useEffect(()=>{\r\n        preload()\r\n    }, [])\r\n\r\n    function validPhone(phone) {\r\n        if (+phone != phone && phone.length !== 12) return false\r\n        else if(phone.length === 10 && +phone == phone) return true\r\n        else if(phone.length === 11 && +phone == phone && phone[0] == 1) return true\r\n        else if(phone.length === 12 && +phone.slice(1) == phone.slice(1) && phone[0] === \"+\" && phone[1] === '1') return true\r\n        return false\r\n    }\r\n\r\n    function printPhone(phone) {\r\n        return validPhone(phone)? \"+1\" + phone.slice(-10) : phone\r\n    }\r\n\r\n    function validEmail(email) {\r\n        return /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)\r\n    }\r\n\r\n    function validAge(age) {\r\n        return !isNaN(age) && +age >= 21 && +age % 1 === 0\r\n    }\r\n\r\n    function validExperience(experience, age) {\r\n        return !isNaN(experience) && +experience >= 0 && +experience % 1 === 0 && +age - 21 >= +experience \r\n    }\r\n\r\n    function validYearlyIncome(income) {\r\n        return !isNaN(income) && +income >= 0 && +income <= 1e6\r\n    }\r\n\r\n    function validHasChildren(hasChildren) {\r\n        let arr = ['true', 'false', ''];\r\n        return arr.includes(hasChildren.toLowerCase())\r\n    }\r\n\r\n    function validLicenseStates(state) {\r\n        let splittedState = state.split(\"|\");\r\n        let isGood = true\r\n        splittedState.forEach(el => {\r\n            if (!/^[a-zA-Z]*$/.test(el)) {isGood = false}\r\n        })\r\n        return isGood\r\n    }\r\n\r\n    function printLicenseState(state) {\r\n        let splitted = state.split(\"|\") \r\n        return splitted.map(el => el.slice(0, 2).toUpperCase()).join(\", \")\r\n    }\r\n\r\n    function validExpirationDate(date) {\r\n        const daysInMonths = {1:31, 2:28, 3:31, 4:30, 5:31, 6:30, 7:31, 8:31, 9:30, 10:31, 11:30, 12:31}\r\n        let month, day, year;\r\n        if (date.split('/').length === 3) {\r\n            [month, day, year] = date.split('/')\r\n        } else if (date.split('-').length === 3) {\r\n            [year, month, day] = date.split('-')\r\n        } else {\r\n            return false\r\n        }\r\n        if ((+month <= 0 || +month > 12) || (year.length !== 4 || +year != year)) {\r\n            return false;\r\n        } else if(+day < 0 || +day > daysInMonths[+month])\r\n            return false;\r\n        const DateFromData = new Date(date)\r\n        if (DateFromData - new Date() > 0)\r\n            return true\r\n        return false;\r\n    }\r\n\r\n    function validLicenseNumber(number) {\r\n        return /^[a-zA-Z0-9]*$/.test(number) && number.length === 6\r\n    }\r\n\r\n    function findDuplicate(email, phone, index) {\r\n        let counter = 0;\r\n        let middleIndex;\r\n        for (let i = data.length - 1; i >= 0; i--) {\r\n            if(data[i][\"email\"].toLowerCase() === email.toLowerCase() || printPhone(data[i][\"phone\"]) === printPhone(phone)) {\r\n                counter++;\r\n                if (i !== index) {\r\n                    middleIndex = i + 1;\r\n                }\r\n            }\r\n        }\r\n        if (counter === 1) return \"unique\"\r\n        return middleIndex;\r\n    }\r\n\r\n    function CreateRow() {\r\n        let rows = data.map((el, index) => {\r\n            return <tr key={index + 1} >\r\n                <td>\r\n                    {index + 1}\r\n                </td>\r\n                <td>\r\n                    {el[\"full name\"]}\r\n                </td>\r\n                <td className={validPhone(el[\"phone\"]) ? \"\" : \"bg-red\"}>\r\n                    {printPhone(el[\"phone\"])}\r\n                </td>\r\n                <td className={validEmail(el[\"email\"]) ? \"\" : \"bg-red\"}>\r\n                    {el[\"email\"]}\r\n                </td>\r\n                <td className={validAge(el[\"age\"]) ? \"\" : \"bg-red\"}>\r\n                    {el[\"age\"]}\r\n                </td>\r\n                <td className={validExperience(el[\"experience\"], el[\"age\"]) ? \"\" : \"bg-red\"}>\r\n                    {el[\"experience\"]}\r\n                </td>\r\n                <td className={validYearlyIncome(el[\"yearly income\"]) ? \"\" : \"bg-red\"}>\r\n                    {isNaN(el[\"yearly income\"]) ? el[\"yearly income\"] : Number(el[\"yearly income\"]).toFixed(2)}\r\n                </td>\r\n                <td className={validHasChildren(el[\"has children\"]) ? \"\" : \"bg-red\"}>\r\n                    {el[\"has children\"].toLowerCase() === \"true\" || el[\"has children\"].toLowerCase() === \"false\" ? el[\"has children\"].toUpperCase() : el[\"has children\"].toLowerCase() === \"\" ? \"FALSE\" : el[\"has children\"]}\r\n                </td>\r\n                <td className={validLicenseStates(el[\"license states\"]) ? \"\" : \"bg-red\"}>\r\n                    {validLicenseStates(el['license states']) ? printLicenseState(el['license states']) : el['license states'].split(\"|\").join(\", \")}\r\n                </td>\r\n                <td className={validExpirationDate(el[\"expiration date\"]) ? \"\" : \"bg-red\"}>\r\n                    {el[\"expiration date\"]}\r\n                </td>\r\n                <td className={validLicenseNumber(el[\"license number\"]) ? \"\" : \"bg-red\"}>\r\n                    {el[\"license number\"]}\r\n                </td>\r\n                <td>\r\n                    {findDuplicate(el[\"email\"], el[\"phone\"], index)}\r\n                </td>\r\n            </tr>\r\n        })\r\n        return rows\r\n    }\r\n\r\n    function preload() {\r\n        let isGood = true\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i][\"full name\"] === \"\" || data[i][\"phone\"] === \"\" || data[i][\"email\"] === \"\") {\r\n                isGood = false;\r\n                break;\r\n            }\r\n        }\r\n        if (!isGood) {\r\n            setIsValid(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            isValid ? (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Id</td>\r\n                            <td>Full name</td>\r\n                            <td>Phone</td>\r\n                            <td>Email</td>\r\n                            <td>Age</td>\r\n                            <td>Experience</td>\r\n                            <td>Yearly income</td>\r\n                            <td>Has children</td>\r\n                            <td>License states</td>\r\n                            <td>Expiration date</td>\r\n                            <td>License Number</td>\r\n                            <td>Duplicate with</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <CreateRow />\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <div className=\"error\">Not valid information</div>\r\n            )\r\n        }\r\n        </>\r\n    )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport \"./dropzone.css\"\r\n\r\nexport const Dropzone = (props) => {\r\n\r\n    async function onLoadReader(evt) {\r\n        const bstr = evt.target.result;\r\n        let allInfo = bstr.split('\\n')\r\n        allInfo = allInfo.filter(el => el.trim())\r\n        \r\n        let table = []\r\n        for (let i = 0; i < allInfo.length; i++) {\r\n            let splited = allInfo[i].split(',')\r\n            for (let j = 0; j < splited.length; j++) {\r\n                if (i === 0) {\r\n                    splited[j] = splited[j].toLowerCase().trim()\r\n                } else {\r\n                    splited[j] = splited[j].trim()\r\n                }\r\n            }\r\n            table.push(splited)\r\n        }\r\n        let objectsArray = []\r\n        for (let i = 1; i < table.length; i++) {\r\n            let newObj = {}\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                newObj[table[0][j]] = table[i][j]\r\n            }\r\n            objectsArray.push(newObj)\r\n        }\r\n        await props.setLoaded(objectsArray)\r\n        \r\n    }\r\n\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        let file = acceptedFiles[0]\r\n        if (file.type !== \"application/vnd.ms-excel\") {\r\n            props.setLoaded(\"file type\")\r\n            return\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onload = onLoadReader\r\n        reader.readAsBinaryString(file);\r\n    }, [])\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div className=\"dropzone\" {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <p className=\"dropzone__text\">Drag and drop file here or click to select file</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { Table } from './table/Table';\r\nimport { Dropzone } from './dropzone/Dropzone';\r\nimport \"./csvReader.css\"\r\n\r\nexport const CSVReader = () => {\r\n    let [loaded, setLoaded] = useState(null)\r\n\r\n    return (\r\n        <div>\r\n            <Dropzone setLoaded={setLoaded} />\r\n            {\r\n                Array.isArray(loaded) ? (\r\n                    <Table data={loaded} />\r\n                ) : (\r\n                    loaded === \"file type\" &&\r\n                        <div className=\"error\">Uncorrect type of file</div>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { CSVReader } from './compenents/CSVReader';\n\nfunction App() {\n  return (\n    <div>\n      <CSVReader />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}