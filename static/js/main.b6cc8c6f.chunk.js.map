{"version":3,"sources":["compenents/table/Table.js","compenents/dropzone/Dropzone.js","compenents/CSVReader.js","App.js","index.js"],"names":["Table","props","useState","isValid","setIsValid","data","validPhone","phone","length","slice","printPhone","validExperience","experience","age","Number","isNaN","validLicenseStates","state","splittedState","split","isGood","forEach","el","console","log","test","validExpirationDate","date","month","day","year","1","2","3","4","5","6","7","8","9","10","11","12","Date","findDuplicate","email","index","middleIndex","counter","i","toLowerCase","CreateRow","map","className","income","toFixed","hasChildren","toUpperCase","join","number","useEffect","preload","Dropzone","onLoadReader","evt","allInfo","target","result","table","splited","j","trim","push","objectsArray","newObj","setLoaded","onDrop","useCallback","acceptedFiles","file","type","reader","FileReader","onload","readAsBinaryString","useDropzone","getRootProps","getInputProps","CSVReader","loaded","Array","isArray","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6cc8c6f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport \"./table.css\"\r\n\r\nexport const Table = (props) => {\r\n    const [isValid, setIsValid] = useState(true)\r\n    const {data} = props\r\n\r\n    useEffect(()=>{\r\n        preload()\r\n    }, [])\r\n\r\n    function validPhone(phone) {\r\n        if (+phone != phone && phone.length !== 12) return false\r\n        else if(phone.length === 10 && +phone == phone) return true\r\n        else if(phone.length === 11 && +phone == phone && phone[0] == 1) return true\r\n        else if(phone.length === 12 && +phone.slice(1) == phone.slice(1) && phone[0] === \"+\" && phone[1] === '1') return true\r\n        return false\r\n    }\r\n\r\n    function printPhone(phone) {\r\n        return validPhone(phone)?phone.length === 10? \"+1\" + phone: phone.length === 11 ? \"+\" + phone : phone : phone\r\n    }\r\n\r\n    function validEmail(email) {\r\n        return /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)\r\n    }\r\n\r\n    function validAge(age) {\r\n        return !Number.isNaN(+age) && age % 1 === 0 && +age >= 21\r\n    }\r\n\r\n    function validExperience(experience, age) {\r\n        return !Number.isNaN(+experience) && +experience >= 0 && +experience % 1 === 0 && +age - 21 >= +experience \r\n    }\r\n\r\n    function validYearlyIncome(income) {\r\n        return !Number.isNaN(+income) && +income >= 0 && +income <= 1e6\r\n    }\r\n\r\n    function validHasChildren(hasChildren) {\r\n        return hasChildren.toLowerCase() === \"true\" || hasChildren.toLowerCase() === \"false\" || hasChildren.toLowerCase() === \"\"\r\n    }\r\n\r\n    function validLicenseStates(state) {\r\n        let splittedState = state.split(\"|\");\r\n        let isGood = true\r\n        splittedState.forEach(el => {\r\n            console.log(!/^[a-zA-Z]*$/.test(el))\r\n            if (!/^[a-zA-Z]*$/.test(el)) {isGood = false}\r\n        })\r\n        return isGood\r\n    }\r\n\r\n    function printLicenseState(state) {\r\n        let splitted = state.split(\"|\") \r\n        return splitted.map(el => el.slice(0, 2).toUpperCase()).join(\", \")\r\n    }\r\n\r\n    function validExpirationDate(date) {\r\n        const daysInMonths = {1:31, 2:28, 3:31, 4:30, 5:31, 6:30, 7:31, 8:31, 9:30, 10:31, 11:30, 12:31}\r\n        let month, day, year;\r\n        if (date.split('/').length === 3) {\r\n            [month, day, year] = date.split('/')\r\n        } else if (date.split('-').length === 3) {\r\n            [year, month, day] = date.split('-')\r\n        } else {\r\n            return false\r\n        }\r\n        if ((+month <= 0 || +month > 12) || (year.length !== 4 || +year != year)) {\r\n            return false;\r\n        } else if(+day < 0 || +day > daysInMonths[+month])\r\n            return false;\r\n        const DateFromData = new Date(date)\r\n        if (DateFromData - new Date() > 0)\r\n            return true\r\n        return false;\r\n    }\r\n\r\n    function validLicenseNumber(number) {\r\n        return /^[a-zA-Z0-9]*$/.test(number) && number.length === 6\r\n    }\r\n\r\n    function findDuplicate(email, phone, index) {\r\n        let counter = 0;\r\n        let middleIndex;\r\n        for (let i = data.length - 1; i >= 0; i--) {\r\n            if(data[i][\"email\"].toLowerCase() === email.toLowerCase() || printPhone(data[i][\"phone\"]) === printPhone(phone)) {\r\n                counter++;\r\n                if (i !== index) {\r\n                    middleIndex = i + 1;\r\n                }\r\n            }\r\n        }\r\n        if (counter === 1) return \"unique\"\r\n        return middleIndex;\r\n    }\r\n\r\n    function CreateRow() {\r\n        let rows = data.map((el, index) => {\r\n            return <tr key={index + 1} >\r\n                <td>\r\n                    {index + 1}\r\n                </td>\r\n                <td>\r\n                    {el[\"full name\"]}\r\n                </td>\r\n                <td className={validPhone(el[\"phone\"]) ? \"\" : \"bg-red\"}>\r\n                    {printPhone(el[\"phone\"])}\r\n                </td>\r\n                <td className={validEmail(el[\"email\"]) ? \"\" : \"bg-red\"}>\r\n                    {el[\"email\"]}\r\n                </td>\r\n                <td className={validAge(el[\"age\"]) ? \"\" : \"bg-red\"}>\r\n                    {el[\"age\"]}\r\n                </td>\r\n                <td className={validExperience(el[\"experience\"], el[\"age\"]) ? \"\" : \"bg-red\"}>\r\n                    {el[\"experience\"]}\r\n                </td>\r\n                <td className={validYearlyIncome(el[\"yearly income\"]) ? \"\" : \"bg-red\"}>\r\n                    {Number.isNaN(+el[\"yearly income\"]) ? el[\"yearly income\"] : Number(el[\"yearly income\"]).toFixed(2)}\r\n                </td>\r\n                <td className={validHasChildren(el[\"has children\"]) ? \"\" : \"bg-red\"}>\r\n                    {el[\"has children\"].toLowerCase() === \"true\" || el[\"has children\"].toLowerCase() === \"false\" ? el[\"has children\"].toUpperCase() : el[\"has children\"].toLowerCase() === \"\" ? \"FALSE\" : el[\"has children\"]}\r\n                </td>\r\n                <td className={validLicenseStates(el[\"license states\"]) ? \"\" : \"bg-red\"}>\r\n                    {validLicenseStates(el['license states']) ? printLicenseState(el['license states']) : el['license states'].split(\"|\").join(\", \")}\r\n                </td>\r\n                <td className={validExpirationDate(el[\"expiration date\"]) ? \"\" : \"bg-red\"}>\r\n                    {el[\"expiration date\"]}\r\n                </td>\r\n                <td className={validLicenseNumber(el[\"license number\"]) ? \"\" : \"bg-red\"}>\r\n                    {el[\"license number\"]}\r\n                </td>\r\n                <td>\r\n                    {findDuplicate(el[\"email\"], el[\"phone\"], index)}\r\n                </td>\r\n            </tr>\r\n        })\r\n        return rows\r\n    }\r\n\r\n    function preload() {\r\n        let isGood = true\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i][\"full name\"] === \"\" || data[i][\"phone\"] === \"\" || data[i][\"email\"] === \"\") {\r\n                isGood = false;\r\n                break;\r\n            }\r\n        }\r\n        if (!isGood) {\r\n            setIsValid(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            isValid ? (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Id</td>\r\n                            <td>Full name</td>\r\n                            <td>Phone</td>\r\n                            <td>Email</td>\r\n                            <td>Age</td>\r\n                            <td>Experience</td>\r\n                            <td>Yearly income</td>\r\n                            <td>Has children</td>\r\n                            <td>License states</td>\r\n                            <td>Expiration date</td>\r\n                            <td>License Number</td>\r\n                            <td>Duplicate with</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <CreateRow />\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <div className=\"error\">Not valid information</div>\r\n            )\r\n        }\r\n        </>\r\n    )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport \"./dropzone.css\"\r\n\r\nexport const Dropzone = (props) => {\r\n\r\n    function onLoadReader(evt) {\r\n        const bstr = evt.target.result;\r\n        let allInfo = bstr.split('\\n')\r\n        console.log(allInfo)\r\n        let table = []\r\n        for (let i = 0; i < allInfo.length; i++) {\r\n            let splited = allInfo[i].split(',')\r\n            for (let j = 0; j < splited.length; j++) {\r\n                if (i === 0) {\r\n                    splited[j] = splited[j].toLowerCase().trim()\r\n                } else {\r\n                    splited[j] = splited[j].trim()\r\n                }\r\n            }\r\n            table.push(splited)\r\n        }\r\n        let objectsArray = []\r\n        for (let i = 1; i < table.length; i++) {\r\n            let newObj = {}\r\n            for (let j = 0; j < table[i].length; j++) {\r\n                newObj[table[0][j]] = table[i][j]\r\n            }\r\n            objectsArray.push(newObj)\r\n        }\r\n        props.setLoaded(objectsArray)\r\n    }\r\n\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        let file = acceptedFiles[0]\r\n        if (file.type !== \"application/vnd.ms-excel\") {\r\n            props.setLoaded(\"file type\")\r\n            return\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onload = onLoadReader\r\n        reader.readAsBinaryString(file);\r\n    }, [])\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div className=\"dropzone\" {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <p className=\"dropzone__text\">Drag and drop some files here or click to select files</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { Table } from './table/Table';\r\nimport { Dropzone } from './dropzone/Dropzone';\r\nimport \"./csvReader.css\"\r\n\r\nexport const CSVReader = () => {\r\n    let [loaded, setLoaded] = useState(null)\r\n\r\n    return (\r\n        <div>\r\n            <Dropzone setLoaded={setLoaded} />\r\n            {\r\n                Array.isArray(loaded) ? (\r\n                    <Table data={loaded} />\r\n                ) : (\r\n                    loaded === \"file type\" &&\r\n                        <div className=\"error\">Uncorrect type of file</div>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { CSVReader } from './compenents/CSVReader';\n\nfunction App() {\n  return (\n    <div>\n      <CSVReader />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}